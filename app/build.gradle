apply plugin: 'com.android.application'

def tagCmd = 'git describe develop --tags'
def tag = tagCmd.execute().text.trim()
def date = new Date().format('yyyyMMdd').toInteger()

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "com.osfans.trime"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode date
        versionName "$tag-$date"
        setProperty("archivesBaseName", "trime-$date")
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_TOOLCHAIN=clang", "-DANDROID_STL=c++_static", "-DANDROID_STL_FORCE_FEATURES=ON"
            }
        }
    }

    signingConfigs {
       release {
       }
    }

    buildTypes {
        release {
            minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'
            signingConfig signingConfigs.release
        }
    }

    def propsFile = rootProject.file('gradle.properties') //store release config in gradle.properties
    def configName = 'release'

    if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props!=null && props.containsKey('storeFile')) {
            android.signingConfigs[configName].storeFile = rootProject.file(props['storeFile'])
            android.signingConfigs[configName].storePassword = props['storePassword']
            android.signingConfigs[configName].keyAlias = props['keyAlias']
            android.signingConfigs[configName].keyPassword = props['keyPassword']
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/jni/CMakeLists.txt"
        }
    }
}

dependencies {
    compile 'com.android.support:support-v13:27.0.2'
}